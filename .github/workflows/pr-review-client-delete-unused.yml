name: Delete unused AI Answers PR review environments

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *" # Nightly at 4am

env:
  AWS_DEFAULT_REGION: ca-central-1
  DELETE_AFTER_DAYS: 14
  FUNCTION_PREFIX: "ai-answers-client-pr"
  IMAGE: ai_answers_pr_review

permissions:
  id-token: write
  contents: read

jobs:
  delete-unused-pr-environments:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: arn:aws:iam::992382783569:role/ai-answers-apply
          role-session-name: PRReviewDeleteUnused
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Delete old PR review environments
        run: |
          IFS=$'\n\t'
          DELETE_DATE_EPOCH=$(date -d "-${{ env.DELETE_AFTER_DAYS }} days" +%s)
          PR_REVIEW_ENVS="$(aws lambda list-functions --query 'Functions[?starts_with(FunctionName, `${{ env.FUNCTION_PREFIX }}`) == `true`]' | jq -c -r '.[]')"

          for ENV in $PR_REVIEW_ENVS; do
              FUNCTION_NAME="$(jq -r '.FunctionName' <<< $ENV)"
              LAST_MODIFIED="$(jq -r '.LastModified' <<< $ENV)"
              LAST_MODIFIED_EPOCH="$(date -d $LAST_MODIFIED +%s)"

              if [ $LAST_MODIFIED_EPOCH -lt $DELETE_DATE_EPOCH ]; then
                  echo "Deleting $FUNCTION_NAME"
                  # Extract PR number and language from function name (format: ai-answers-client-pr-123-en)
                  PR_NUMBER_LANG="${FUNCTION_NAME##*-pr-}"
                  
                  # Delete function URL config
                  aws lambda delete-function-url-config --function-name $FUNCTION_NAME > /dev/null 2>&1 || true
                  
                  # Delete function
                  aws lambda delete-function --function-name $FUNCTION_NAME > /dev/null 2>&1 || true
                  
                  # Delete log group
                  aws logs delete-log-group --log-group-name /aws/lambda/$FUNCTION_NAME > /dev/null 2>&1 || true
                  
                  # Delete ECR image (extract just the PR number for the image tag)
                  if [[ $PR_NUMBER_LANG =~ ^([0-9]+)-(.+)$ ]]; then
                    PR_NUMBER="${BASH_REMATCH[1]}"
                    aws ecr batch-delete-image --repository-name $IMAGE --image-ids imageTag=$PR_NUMBER > /dev/null 2>&1 || true
                  fi
              fi
          done
