name: PR Review Environments

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed

env:
  FUNCTION_NAME: ai-answers-pr-review
  IMAGE: ai-answers # Use existing ECR repository
  REGISTRY: 992382783569.dkr.ecr.ca-central-1.amazonaws.com
  ROLE_ARN: arn:aws:iam::992382783569:role/ai-answers-apply
  REGION: ca-central-1
  DOMAIN: ai-answers.cdssandbox.xyz

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  deploy:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Set PR Number
        run: echo "PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install Terragrunt
        uses: cds-snc/terraform-tools-setup@v1

      - name: Build, Tag, and Push Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$IMAGE:$PR_NUMBER . -f Dockerfile.lambda
          docker push $ECR_REGISTRY/$IMAGE:$PR_NUMBER

      - name: Deploy PR Environment
        env:
          PR_NUMBER: ${{ env.PR_NUMBER }}
        run: |
          cd terragrunt/env/pr-environments/lambda
          terragrunt apply -auto-approve -var="pr_number=${{ env.PR_NUMBER }}"

      - name: Update Lambda Function Code
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          aws lambda update-function-code \
            --function-name $FUNCTION_NAME-$PR_NUMBER \
            --image-uri $ECR_REGISTRY/$IMAGE:$PR_NUMBER

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = process.env.PR_NUMBER;
            const url = `https://${prNumber}.${process.env.DOMAIN}`;

            const comment = `## ðŸš€ PR Preview Deployed!

            Your preview environment is ready at: ${url}

            **Build Details:**
            - PR Number: #${prNumber}
            - Commit: ${context.sha.substring(0, 7)}
            - Deployed at: ${new Date().toISOString()}

            This preview will be automatically destroyed when the PR is closed.`;

            // Find and update existing comment or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('PR Preview Deployed')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }

  teardown:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Set PR Number
        run: echo "PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.REGION }}

      - name: Install Terragrunt
        uses: cds-snc/terraform-tools-setup@v1

      - name: Destroy PR Environment
        env:
          PR_NUMBER: ${{ env.PR_NUMBER }}
        run: |
          cd terragrunt/env/pr-environments/lambda
          terragrunt destroy -auto-approve -var="pr_number=${{ env.PR_NUMBER }}"

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = process.env.PR_NUMBER;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `## ðŸ§¹ PR Preview Environment Destroyed\n\nThe preview environment for PR #${prNumber} has been successfully cleaned up.`
            });
