name: Deploy to App Runner
on:
  push:
    branches: [ main ]
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: üîç Dump OIDC token claims for debug
        run: |
          ID_TOKEN=$(curl -s \
            -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL" \
            -H "Accept: application/json;api-version=2.0" \
            | jq .)
          echo "OIDC token payload:"
          echo "$ID_TOKEN"
          echo "üîë SUB claim:"
          echo "$ID_TOKEN" | jq -r .sub

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          # audience defaults to sts.amazonaws.com; only override if your trust policy uses a different audience
        env:
          ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ steps.dump.outputs.AID_TOKEN }}

      - name: Deploy to App Runner
        id: deploy-apprunner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: ai-answers
          source-connection-arn: ${{ secrets.AWS_CONNECTION_SOURCE_ARN }}
          repo: https://github.com/${{ github.repository }}
          branch: main
          runtime: NODEJS_18
          build-command: npm run install
          start-command: npm run start
          port: 8080
          region: ${{ secrets.AWS_REGION }}
          cpu: 1
          memory: 2
          wait-for-service-stability-seconds: 600

      - name: Show App Runner URL
        run: echo "‚úÖ Deployed to ${{ steps.deploy-apprunner.outputs.service-url }}"
