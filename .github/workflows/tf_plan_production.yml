name: "Terraform plan production"

on:
  pull_request:
    branches:
      - main
    paths:
      - "version.txt"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.10.4
  TERRAGRUNT_VERSION: 0.72.3
  TF_VAR_docdb_username: ${{ secrets.PROD_DOCDB_USERNAME}}
  TF_VAR_docdb_password: ${{ secrets.PROD_DOCDB_PASSWORD}}
  TF_VAR_azure_openai_api_key: ${{ secrets.PROD_AZURE_OPENAI_API_KEY}}
  TF_VAR_azure_openai_endpoint: ${{ secrets.PROD_AZURE_OPENAI_ENDPOINT}}
  TF_VAR_azure_openai_api_version: ${{ secrets.PROD_AZURE_OPENAI_API_VERSION}}
  TF_VAR_canada_ca_search_uri: ${{ secrets.PROD_CANADA_CA_SEARCH_URI}}
  TF_VAR_canada_ca_search_api_key: ${{ secrets.PROD_CANADA_CA_SEARCH_API_KEY}}
  TF_VAR_user_agent: ${{ secrets.PROD_USER_AGENT}}
  TF_VAR_jwt_secret_key: ${{ secrets.PROD_JWT_SECRET_KEY}}
  TF_VAR_sentinel_customer_id: ${{ secrets.PROD_LOG_ANALYTICS_WORKSPACE_ID }}
  TF_VAR_sentinel_shared_key: ${{ secrets.PROD_LOG_ANALYTICS_WORKSPACE_KEY }}
  TF_VAR_google_api_key: ${{ secrets.PROD_GOOGLE_API_KEY}}
  TF_VAR_google_search_engine_id: ${{ secrets.PROD_GOOGLE_SEARCH_ENGINE_ID}}

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    if: github.repository == 'cds-snc/ai-answers'
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: ecr
          - module: ssm
          - module: network
          - module: hosted_zone
          - module: load_balancer
          - module: database
          - module: iam
          - module: ecs
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform Tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: arn:aws:iam::730335533085:role/ai-answers-plan
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform plan
        uses: cds-snc/terraform-plan@v3.3.1
        with:
          comment-delete: true
          comment-title: "Production: ${{ matrix.module }}"
          directory: ./terragrunt/env/production/${{ matrix.module }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true
